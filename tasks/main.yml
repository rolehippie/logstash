---
- name: Remove legacy key
  apt_key:
    id: 46095ACC8548582C1A2699A9D27D666CD88E42B4
    state: absent
  tags:
    - logstash

- name: Remove legacy repo
  apt_repository:
    repo: "deb https://artifacts.elastic.co/packages/{{ logstash_major_version }}.x/apt stable main"
    filename: elastic
    update_cache: False
    state: absent
  tags:
    - logstash

- name: Download repo key
  shell:
    cmd: "curl -sSL 'https://artifacts.elastic.co/GPG-KEY-elasticsearch' | gpg --dearmor --output {{ logstash_keyring }}"
    creates: "{{ logstash_keyring }}"
  tags:
    - logstash

- name: Add apt repository
  apt_repository:
    repo: "deb [signed-by={{ logstash_keyring }}] https://artifacts.elastic.co/packages/{{ logstash_major_version }}.x/apt stable main"
    filename: elastic
    update_cache: True
    state: present
  tags:
    - logstash

- name: Create required group
  group:
    name: "{{ logstash_group }}"
    system: True
    state: present
  tags:
    - logstash

- name: Create required user
  user:
    name: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    password: "!"
    shell: /usr/sbin/nologin
    home: /usr/share/logstash
    create_home: False
    system: True
    state: present
  tags:
    - logstash

- name: Pin package version
  copy:
    content: |
      Explantion: Pin added by logstash role
      Package: logstash
      Pin: version 1:{{ logstash_server_version }}*
      Pin-Priority: 1000
    dest: /etc/apt/preferences.d/logstash
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - logstash

- name: Enforce man dir
  file:
    path: /usr/share/man/man1
    recurse: True
    owner: root
    group: root
  tags:
    - logstash

- name: Install required packages
  loop:
    - ca-certificates-java
    - "openjdk-{{ logstash_openjdk_version }}-jre"
    - "logstash=1:{{ logstash_server_version }}*"
  package:
    name: "{{ item }}"
    state: present
  environment:
    JAVA_HOME: "{{ logstash_java_home }}"
  tags:
    - logstash

- name: Drop unused files
  loop:
    - /etc/logstash/logstash-sample.conf
    - /etc/logstash/startup.options
  file:
    path: "{{ item }}"
    state: absent
  tags:
    - logstash

- name: Write log4j2 config
  notify:
    - Restart logstash
  copy:
    src: log4j2.properties
    dest: /etc/logstash/log4j2.properties
    owner: root
    group: "{{ logstash_group }}"
    mode: u=rw,g=rw,o=
  tags:
    - logstash

- name: Write logstash config
  notify:
    - Restart logstash
  template:
    src: config.j2
    dest: /etc/logstash/logstash.yml
    owner: root
    group: "{{ logstash_group }}"
    mode: u=rw,g=rw,o=
  tags:
    - logstash

- name: Write pipelines config
  notify:
    - Restart logstash
  template:
    src: pipelines.j2
    dest: /etc/logstash/pipelines.yml
    owner: root
    group: "{{ logstash_group }}"
    mode: u=rw,g=rw,o=
  tags:
    - logstash

- name: Write jvm config
  notify:
    - Restart logstash
  template:
    src: jvm.j2
    dest: /etc/logstash/jvm.options
    owner: root
    group: "{{ logstash_group }}"
    mode: u=rw,g=rw,o=
  tags:
    - logstash

- name: Write default config
  notify:
    - Restart logstash
  template:
    src: default.j2
    dest: /etc/default/logstash
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - logstash

- name: Start logstash service
  systemd:
    name: logstash
    state: started
    daemon_reload: True
    masked: False
    enabled: True
  tags:
    - logstash

- name: Check installed plugins
  register: logstash_plugins_list
  changed_when: False
  command: /usr/share/logstash/bin/logstash-plugin list
  environment:
    JAVA_HOME: "{{ logstash_java_home }}"
  tags:
    - logstash

- name: Install defined plugins
  loop: "{{ logstash_install_plugins }}"
  when: item not in logstash_plugins_list.stdout and item.state | default('present') == 'present'
  notify:
    - Restart logstash
  command: "/usr/share/logstash/bin/logstash-plugin install {{ item.name | default(item) }}"
  environment:
    JAVA_HOME: "{{ logstash_java_home }}"
  tags:
    - logstash

- name: Remove defined plugins
  loop: "{{ logstash_install_plugins }}"
  when: item in logstash_plugins_list.stdout and item.state | default('present') == 'absent'
  notify:
    - Restart logstash
  command: "/usr/share/logstash/bin/logstash-plugin remove {{ item.name | default(item) }}"
  environment:
    JAVA_HOME: "{{ logstash_java_home }}"
  tags:
    - logstash

- name: Include exporter tasks
  when: logstash_exporter_enabled | default(False)
  include_tasks: exporter.yml
  tags:
    - logstash
    - logstash-exporter

...
